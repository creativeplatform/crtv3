import { BaseCommand, type QueryCommandFlags } from '../../command.js';
import { Edge, PageInfo, StreamState } from '@ceramicnetwork/common';
import { CeramicClient } from '@ceramicnetwork/http-client';
type PartialModelDefinition = {
    id: string;
    name: string;
    description: string;
};
type ModelListFlags = QueryCommandFlags & {
    'indexer-url': string;
    table?: boolean;
};
export default class ModelList extends BaseCommand<ModelListFlags> {
    fetchedFields: Array<PartialModelDefinition>;
    lastLoadedPageInfo: PageInfo | null;
    static description: string;
    static flags: {
        'indexer-url': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        table: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        network: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    getPageSize(): number;
    getIndexerForNetwork(network: string): string;
    getIndexerUrl(): string;
    run(): Promise<void>;
    anykeyWithFriendlyExit(message: string, exitMessage?: string): Promise<void>;
    getFieldsFromEdges(ceramicIndexer: CeramicClient, edges: Array<Edge<StreamState | null>>): Array<PartialModelDefinition>;
    displayPartialDefinitions(definitions: Array<PartialModelDefinition>): void;
}
export {};
