export class SseFeed {
    constructor(logger, observable, serializeFn) {
        this.logger = logger;
        this.observable = observable;
        this.serializeFn = serializeFn;
    }
    send(res) {
        res.writeHead(200, {
            Connection: 'keep-alive',
            'Cache-Control': 'no-cache',
            'Content-Type': 'text/event-stream',
        });
        const subscription = this.observable.subscribe({
            next: (value) => {
                res.write(`data: ${this.serializeFn(value)}\n\n`);
            },
            error: (error) => {
                this.logger.err(error);
                res.end();
            },
            complete: () => {
                res.end();
            },
        });
        const tearDown = () => {
            subscription.unsubscribe();
            res.end();
            res.off('close', tearDown);
            res.off('abort', tearDown);
        };
        res.on('close', tearDown);
        res.on('abort', tearDown);
    }
}
//# sourceMappingURL=sse-feed.js.map