import type { ChainedKVBatch, IKVStore, IKVStoreFindResult, StoreSearchParams } from './ikv-store.js';
import type { DiagnosticsLogger } from '@ceramicnetwork/common';
import { Level } from 'level';
export declare class LevelKVStore implements IKVStore {
    readonly level: Level;
    readonly logger: DiagnosticsLogger;
    constructor(level: Level, logger: DiagnosticsLogger);
    init(): Promise<void>;
    batch(): ChainedKVBatch;
    close(): Promise<void>;
    del(key: string): Promise<void>;
    get(key: string): Promise<any>;
    isEmpty(params?: Partial<StoreSearchParams>): Promise<boolean>;
    exists(key: string): Promise<boolean>;
    find(params?: Partial<StoreSearchParams>): Promise<Array<IKVStoreFindResult>>;
    findKeys(params?: Partial<StoreSearchParams>): Promise<Array<string>>;
    put(key: string, value: any): Promise<void>;
}
//# sourceMappingURL=level-kv-store.d.ts.map