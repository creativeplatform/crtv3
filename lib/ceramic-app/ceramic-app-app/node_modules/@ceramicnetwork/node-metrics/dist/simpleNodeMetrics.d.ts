export declare const metricSchema = "\n\ninterface MetricEvent\n  @createModel(description: \"Required metric event content interface\") {\n  ts: DateTime!\n  ceramicNode: CeramicNode\n}\n\ntype CeramicNode {\n  id: String! @string(minLength: 1, maxLength: 1024)\n  name: String @string(maxLength: 128)\n  nodeAuthDID: String @string(maxLength: 256)\n  IPAddress: String @string(maxLength: 64)\n  PeerID: String @string(maxLength: 256)\n  ceramicVersion: String @string(maxLength: 32)\n  ipfsVersion: String @string(maxLength: 32)\n}\n\ntype GenericMetricEvent implements MetricEvent\n  @createModel(description: \"Metric Event with data as json blob\") {\n  ts: DateTime!\n  ceramicNode: CeramicNode!\n  dataBlob: String @string(maxLength: 4096)\n}\n\ntype PeriodicMetricEventV1 implements MetricEvent\n  @createModel(description: \"Initial take on useful metric fields\") {\n\n  ts: DateTime!\n  ceramicNode: CeramicNode!\n\n  lookbackWindowMS: Int\n\n  totalPinnedStreams: Int\n  totalIndexedModels: Int\n  currentPendingRequests: Int\n\n  meanAnchorRequestAgeMS: Int\n  maxAnchorRequestAgeMS: Int\n  recentCreatedRequests: Int\n  recentCompletedRequests: Int\n  recentErrors: Int\n\n  sampleRecentErrors: [String] @string(maxLength: 512) @list(maxLength: 8)\n}\n\n";
