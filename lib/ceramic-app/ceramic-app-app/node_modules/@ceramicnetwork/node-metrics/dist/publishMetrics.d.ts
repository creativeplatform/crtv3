import type { CeramicApi } from "@ceramicnetwork/common";
export interface CeramicNode {
    id: string;
    name?: string;
    nodeAuthDID?: string;
    IPAddress?: string;
    PeerID?: string;
    ceramicVersion?: string;
    ipfsVersion?: string;
}
export interface PeriodicMetricEventV1 {
    ts: string;
    ceramicNode: CeramicNode;
    lookbackWindowMS?: number;
    totalPinnedStreams?: number;
    totalIndexedModels?: number;
    currentPendingRequests?: number;
    meanAnchorRequestAgeMS?: number;
    maxAnchorRequestAgeMS?: number;
    recentCompletedRequests?: number;
    recentErrors?: number;
    sampleRecentErrors?: string[];
}
export declare class MetricPublisher {
    private ceramic;
    private modelId;
    constructor(ceramic: CeramicApi, network: string);
    publishMetric(data: PeriodicMetricEventV1): Promise<any>;
}
